{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ElectionService } from '../../../../Services/election.service';\nimport { UserService } from '../../../services/user.service';\nimport * as XLSX from 'xlsx';\nlet CreateElectionComponent = class CreateElectionComponent {\n  constructor(router, userservice, rout, service) {\n    this.router = router;\n    this.userservice = userservice;\n    this.rout = rout;\n    this.service = service;\n    this.fileOfVoters = null;\n    this.election = {\n      id: 0,\n      nameOfTheElection: \"\",\n      startTime: new Date(\"\"),\n      endTime: new Date(\"\"),\n      ischangeable: false,\n      manegerUserId: 0,\n      open: \"\",\n      optionToVotes: [],\n      areas: [],\n      voters: []\n    };\n    this.displayOption = false;\n    this.displayArea = false;\n    this.displaylist = false;\n    this.managerId = userservice.userId;\n    rout.params.subscribe(e => {\n      this.electionId = +e['electionid'];\n    });\n  }\n\n  ngOnInit() {\n    if (this.electionId) this.service.getElection(this.electionId).subscribe(e => {\n      this.election = e;\n    });\n  }\n\n  showDialogOfOptions() {\n    this.displayOption = true;\n  }\n\n  showDialogOfArea() {\n    this.displayArea = true;\n  }\n\n  addOption() {\n    this.election.optionToVotes.push({\n      candidateOrPartyName: '',\n      electionId: 0,\n      id: 0\n    });\n  }\n\n  remove(index) {\n    this.election.optionToVotes.splice(index, 1);\n  }\n\n  addArea() {\n    this.election.areas.push({\n      electionId: 0,\n      faults: [],\n      id: 0,\n      nameOfArea: ''\n    });\n  }\n\n  removeArea(index) {\n    this.election.areas.splice(index, 1);\n  }\n\n  showAddListOfVoters() {\n    document.getElementById('list').style.display = \"\";\n  }\n\n  addListOfVoters(evt) {\n    const target = evt.target;\n    const reader = new FileReader();\n\n    reader.onload = e => {\n      const bstr = e.target.result;\n      const wb = XLSX.read(bstr, {\n        type: 'binary'\n      });\n      const wsname = wb.SheetNames[0];\n      const ws = wb.Sheets[wsname];\n      this.data = XLSX.utils.sheet_to_json(ws, {\n        header: 1\n      });\n\n      for (var i = 0; i < this.data.length; i++) {\n        this.election.voters.push({\n          phoneNumber: this.data[i][0],\n          alreadyVoted: false,\n          electionId: 0,\n          id: 0,\n          isInspector: false,\n          optionToVoteIdNumber: 0\n        });\n        console.log(this.election.voters);\n      }\n    };\n\n    reader.readAsBinaryString(target.files[0]);\n  }\n\n  closeDialog() {\n    this.displayArea = false;\n    this.displayOption = false;\n    this.displaylist = false;\n  }\n\n  showlistOfVoters() {\n    this.displaylist = true;\n  }\n\n  submit() {\n    if (this.electionId) {\n      this.service.apdateElection(this.electionId, this.election).subscribe(e => {});\n    } else {\n      this.election.manegerUserId = this.managerId;\n      this.service.createElection(this.election).subscribe(e => {});\n    }\n\n    this.router.navigate(['manager/' + this.managerId + '/managerControlArea']);\n  }\n\n};\nCreateElectionComponent = __decorate([Component({\n  selector: 'app-create-election',\n  templateUrl: './create-election.component.html',\n  styleUrls: ['./create-election.component.css']\n}), __metadata(\"design:paramtypes\", [Router, UserService, ActivatedRoute, ElectionService])], CreateElectionComponent);\nexport { CreateElectionComponent };","map":null,"metadata":{},"sourceType":"module"}