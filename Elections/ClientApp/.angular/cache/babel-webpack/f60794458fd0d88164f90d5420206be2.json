{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ElectionService } from '../../../../Services/election.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InspectorFaultsComponent } from '../inspector-faults/inspector-faults.component';\nimport { ModalManager } from 'ngb-modal';\nimport { UserService } from '../../../services/user.service';\nlet InpectorScreenComponent = class InpectorScreenComponent {\n  constructor(service, route, router, dialog, modalService, userservice) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    this.dialog = dialog;\n    this.modalService = modalService;\n    this.userservice = userservice;\n    this.display = false;\n    this.userId = userservice.userId;\n  }\n\n  ngOnInit() {\n    this.service.getFaultesForInspector(this.userId).subscribe(f => {\n      this.faults = f;\n    });\n  }\n\n  test1(fault) {\n    this.fault = fault;\n    this.getUser(fault.userId);\n    this.showDialog();\n  }\n\n  getUser(id) {\n    this.service.getUserDetails(id).subscribe(u => {\n      this.user = u;\n    });\n  }\n\n  showDialog() {\n    this.display = true;\n  }\n\n  openDialog() {\n    let dialogRef = this.dialog.open(InspectorFaultsComponent, {\n      data: {\n        fault: this.fault\n      },\n      height: '1000px',\n      width: '1000px',\n      hasBackdrop: true,\n      position: {\n        top: '0',\n        left: '0'\n      }\n    });\n  }\n\n  openModal() {\n    this.modalRef = this.modalService.open(InspectorFaultsComponent, {\n      size: \"md\",\n      modalClass: 'mymodal',\n      hideCloseButton: false,\n      centered: false,\n      backdrop: true,\n      animation: true,\n      keyboard: false,\n      closeOnOutsideClick: true,\n      backdropClass: \"modal-backdrop\"\n    });\n  }\n\n  closeModal() {\n    this.modalService.close(this.modalRef); //or this.modalRef.close();\n  }\n\n};\nInpectorScreenComponent = __decorate([Component({\n  selector: 'app-inpector-screen',\n  templateUrl: './inpector-screen.component.html',\n  styleUrls: ['./inpector-screen.component.css']\n}), __metadata(\"design:paramtypes\", [ElectionService, ActivatedRoute, Router, MatDialog, ModalManager, UserService])], InpectorScreenComponent);\nexport { InpectorScreenComponent };","map":null,"metadata":{},"sourceType":"module"}