{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __metadata = this && this.__metadata || function (k, v) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\n\nimport { Component } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { ElectionService } from '../../../../Services/election.service';\nlet UserDetailsComponent = class UserDetailsComponent {\n  constructor(service, route, router) {\n    this.service = service;\n    this.route = route;\n    this.router = router;\n    route.params.subscribe(p => {\n      this.userId = +p['id'];\n    });\n  }\n\n  ngOnInit() {\n    this.service.getUserDetails(this.userId).subscribe(u => {\n      this.userDetails = u;\n    });\n  }\n\n  submit() {\n    this.service.updateUser(this.userId, this.userDetails).subscribe(x => {\n      this.router.navigate(['user/userarea/' + this.userId]);\n    });\n  }\n\n  delete() {\n    this.service.deleteUser(this.userId).subscribe(x => {\n      this.router.navigate(['/']);\n    });\n  }\n\n};\nUserDetailsComponent = __decorate([Component({\n  selector: 'app-user-details',\n  templateUrl: './user-details.component.html',\n  styleUrls: ['./user-details.component.css']\n}), __metadata(\"design:paramtypes\", [ElectionService, ActivatedRoute, Router])], UserDetailsComponent);\nexport { UserDetailsComponent };","map":null,"metadata":{},"sourceType":"module"}