{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\"; //import { AuthHttp } from \"angular2-jwt/angular2-jwt\";\n\nexport let ElectionService = /*#__PURE__*/(() => {\n  class ElectionService {\n    constructor(http\n    /*, private authHttp: AuthHttp*/\n    ) {\n      this.http = http;\n    }\n\n    getElections(userid) {\n      return this.http.get('/api/elections/GetElectionsOfUser/' + userid, this.getOptions());\n    }\n\n    getElectionsForManager() {\n      return this.http.get('/api/elections', this.getOptions());\n    }\n\n    getElection(electionid) {\n      return this.http.get('api/elections/' + electionid, this.getOptions());\n    }\n\n    createElection(election) {\n      return this.http.post('api/elections', election);\n    }\n\n    apdateElection(electionid, election) {\n      return this.http.put('api/elections/' + electionid, election, this.getOptions());\n    }\n\n    getUserDetails(userid) {\n      return this.http.get('/api/users/' + userid, this.getOptions());\n    }\n\n    createUser(user) {\n      return this.http.post('/api/users', user);\n    }\n\n    updateUser(userId, userdetails) {\n      return this.http.put('/api/users/' + userId, userdetails);\n    }\n\n    deleteUser(userid) {\n      return this.http.delete('/api/users/' + userid);\n    }\n\n    faulteReport(faulte) {\n      return this.http.post('/api/faults', faulte);\n    }\n\n    faulteReportWithReplay(fault, id) {\n      return this.http.put('/api/faults/' + id, fault);\n    }\n\n    getAreaOfUser(userId, electionId) {\n      return this.http.get('/api/area?electionId=' + electionId + '&userId=' + userId);\n    }\n\n    getOptionsToVote(electionId) {\n      return this.http.get('/api/option/GetOptionsOfElection/' + electionId);\n    }\n\n    updateVote(id, vote) {\n      return this.http.put('/api/voters/SetVote/' + id, vote);\n    }\n\n    getFaultes(userId) {\n      return this.http.get('/api/fualts/GetFaultsOfInspector/' + userId);\n    }\n\n    login(email) {\n      return this.http.post('/auth', email);\n    }\n\n    getFaultesForInspector(id) {\n      return this.http.get('/api/faults/GetFaultsOfInspector/' + id);\n    }\n\n    getOptions() {\n      //var headers: HttpHeaders = new HttpHeaders();\n      var headers = {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      };\n      return {\n        headers\n      };\n    }\n\n  }\n\n  ElectionService.ɵfac = function ElectionService_Factory(t) {\n    return new (t || ElectionService)(i0.ɵɵinject(i1.HttpClient));\n  };\n\n  ElectionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ElectionService,\n    factory: ElectionService.ɵfac,\n    providedIn: 'root'\n  });\n  return ElectionService;\n})();","map":null,"metadata":{},"sourceType":"module"}