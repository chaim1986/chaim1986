{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { ElectionService } from '../../../../Services/election.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { InspectorFaultsComponent } from '../inspector-faults/inspector-faults.component';\nimport { ModalManager } from 'ngb-modal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../../Services/election.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"ngb-modal\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/forms\";\n\nfunction InpectorScreenComponent_tr_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵelementStart(6, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function InpectorScreenComponent_tr_21_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.test();\n    })(\"ngModelChange\", function InpectorScreenComponent_tr_21_Template_button_ngModelChange_6_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.faultId = $event;\n    });\n    i0.ɵɵtext(7, \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05DC\\u05EA\\u05DC\\u05D5\\u05E0\\u05D4\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const f_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(f_r1.open);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(f_r1.despriction);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate(\"value\", f_r1.id);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.faultId);\n  }\n}\n\nexport let InpectorScreenComponent = /*#__PURE__*/(() => {\n  class InpectorScreenComponent {\n    constructor(service, route, router, dialog, modalService) {\n      this.service = service;\n      this.route = route;\n      this.router = router;\n      this.dialog = dialog;\n      this.modalService = modalService;\n      this.display = false;\n      route.params.subscribe(u => {\n        this.userId = +u['id'];\n      });\n    }\n\n    ngOnInit() {\n      this.service.getFaultesForInspector(this.userId).subscribe(f => {\n        this.faults = f;\n      });\n    }\n\n    chooseFault() {\n      this.fault = this.faults;\n    }\n\n    showDialog() {\n      this.display = true;\n    }\n\n    test() {\n      let dialogRef = this.dialog.open(InspectorFaultsComponent, {\n        height: '1000px',\n        width: '1000px',\n        hasBackdrop: false,\n        position: {\n          top: \"0px\",\n          left: \"0px\"\n        }\n      });\n    }\n\n    openModal() {\n      this.modalRef = this.modalService.open(InspectorFaultsComponent, {\n        size: \"md\",\n        modalClass: 'mymodal',\n        hideCloseButton: false,\n        centered: false,\n        backdrop: true,\n        animation: true,\n        keyboard: false,\n        closeOnOutsideClick: true,\n        backdropClass: \"modal-backdrop\"\n      });\n    }\n\n    closeModal() {\n      this.modalService.close(this.modalRef); //or this.modalRef.close();\n    }\n\n  }\n\n  InpectorScreenComponent.ɵfac = function InpectorScreenComponent_Factory(t) {\n    return new (t || InpectorScreenComponent)(i0.ɵɵdirectiveInject(i1.ElectionService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.ModalManager));\n  };\n\n  InpectorScreenComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InpectorScreenComponent,\n    selectors: [[\"app-inpector-screen\"]],\n    decls: 22,\n    vars: 5,\n    consts: [[1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"btn\", \"btn-primary\", 3, \"value\", \"ngModel\", \"click\", \"ngModelChange\"]],\n    template: function InpectorScreenComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1);\n        i0.ɵɵpipe(2, \"json\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\");\n        i0.ɵɵelementStart(4, \"div\");\n        i0.ɵɵelementStart(5, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function InpectorScreenComponent_Template_button_click_5_listener() {\n          return ctx.test();\n        });\n        i0.ɵɵtext(6, \"open dialog\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"button\", 0);\n        i0.ɵɵlistener(\"click\", function InpectorScreenComponent_Template_button_click_7_listener() {\n          return ctx.openModal();\n        });\n        i0.ɵɵtext(8, \"open modal\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"h4\");\n        i0.ɵɵtext(10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"table\", 1);\n        i0.ɵɵelementStart(12, \"thead\");\n        i0.ɵɵelementStart(13, \"tr\");\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"\\u05DE\\u05E6\\u05D1 \\u05D4\\u05EA\\u05DC\\u05D5\\u05E0\\u05D4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"th\");\n        i0.ɵɵtext(17, \"\\u05EA\\u05D9\\u05D0\\u05D5\\u05E8 \\u05E7\\u05E6\\u05E8\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"th\");\n        i0.ɵɵtext(19, \"\\u05D4\\u05DB\\u05E0\\u05E1 \\u05DC\\u05EA\\u05DC\\u05D5\\u05E0\\u05D4\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"tbody\");\n        i0.ɵɵtemplate(21, InpectorScreenComponent_tr_21_Template, 8, 4, \"tr\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(2, 3, ctx.faultId));\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate(ctx.a.electionName);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngForOf\", ctx.a.area.faults);\n      }\n    },\n    directives: [i5.NgForOf, i6.NgControlStatus, i6.NgModel],\n    pipes: [i5.JsonPipe],\n    styles: [\"\"]\n  });\n  return InpectorScreenComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}